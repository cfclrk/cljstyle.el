#+TITLE: cljstyle.el

Format Clojure code using [[https://github.com/greglook/cljstyle][cljstyle]].

Under the covers, this uses [[https://github.com/purcell/emacs-reformatter][emacs-reformatter]] to do all the heavy lifting.

* Installation

** Example: package.el

   This package is not available in MELPA. First, clone this repository
   somewhere locally. Then do something like this:

   #+begin_src emacs-lisp
     (unless (package-installed-p 'cljstyle)
       (package-install-file
        "~/path/to/cljstyle.el/cljstyle.el"))

     (require 'cljstyle)

     (unless (package-installed-p 'clojure-mode)
       (package-install 'clojure-mode))

     (add-hook
      'clojure-mode-hook
      #'cljstyle-format-on-save-mode)
   #+end_src

** Example: use-package and straight

   Example using [[https://github.com/jwiegley/use-package][use-package]] and [[https://github.com/raxod502/straight.el][straight]]:

   #+begin_src emacs-lisp
     (use-package cljstyle
       :after clojure-mode
       :straight (cljstyle
                  :type git
                  :host github
                  :repo "cfclrk/cljstyle.el"))

     (use-package clojure-mode
       :hook ((clojure-mode . cljstyle-format-on-save-mode)))
   #+end_src

* Configuration

  - =cljstyle-format-on-save-mode=: A minor mode which, when enabled, can
    automatically format Clojure files on save. Enable it with something like:

    #+begin_src emacs-lisp
      (add-hook
       'clojure-mode-hook
       #'cljstyle-format-on-save-mode)
    #+end_src

* Usage

  This package (well, really, the underlying [[https://github.com/purcell/emacs-reformatter][emacs-reformatter]] package) provides
  two interactive functions:

  - =cljstyle-format-buffer=
  - =cljstyle-format-region=

* See Also

  - [[https://github.com/jstokes/cljstyle-mode][cljstyle-mode]]
